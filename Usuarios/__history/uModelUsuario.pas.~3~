unit uModelUsuario;

interface

uses
  System.SysUtils, Vcl.Dialogs, FireDAC.Comp.Client, Data.DB, FireDAC.DApt,
  FireDAC.Comp.UI,
  uEstadoDto, uClassConexaoSingleton;

type
  TEstadoModel = class(TFDQuery)
  public
    teste: Integer;

    function BuscarUF(var AEstado: TEstadoDto): Boolean;

    function Deletar(const AIDUF: Integer): Boolean;

    function Inserir(var AEstado: TEstadoDto): Boolean;


    // function Alterar(var AEstado: TEstadoDto): Boolean;

  end;

implementation

{ TEstadoModel }

function TEstadoModel.Deletar(const AIDUF: Integer): Boolean;
begin
  Result := TConexaoSingleton.GetInstancia.ExecSQL
    ('delete from Estado where idEstado = ' + IntToStr(AIDUF)) > 0;
end;

function TEstadoModel.BuscarUF(var AEstado: TEstadoDto): Boolean;
begin
  Result := False;

  Connection := TConexaoSingleton.GetInstancia;
  // oQuery.Open('select idEstado, Nome from Estado where UF = '''+AEstado.UF+'''');
  Open('SELECT idEstado, Nome FROM Estado WHERE UF = ' + QuotedStr(AEstado.UF));
  if (not(IsEmpty)) then
  begin
    AEstado.ID := FieldByName('idEstado').AsInteger;
    AEstado.Nome := FieldByName('Nome').AsString;
    Result := True;
  end;
end;

function TEstadoModel.Inserir(var AEstado: TEstadoDto): Boolean;
begin
  Result := False;
  Connection := TConexaoSingleton.GetInstancia;
  // oQuery.Open('select idEstado, Nome from Estado where UF = '''+AEstado.UF+'''');
  Open('SELECT MAX(idEstado) as MaxID FROM estado');
  if (not(IsEmpty)) then
    AEstado.ID := FieldByName('MaxID').AsInteger + 1;
  ExecSQL('INSERT INTO estado(idEstado, Nome, UF) VALUES(' +
    QuotedStr(IntToStr(AEstado.ID)) + ', ' + QuotedStr(AEstado.Nome) + ', ' +
    QuotedStr(AEstado.UF) + ');');
  Result := True;
end;

end.
